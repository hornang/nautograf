name: Build packages

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'testbuild'

  pull_request:
    branches:
      - main

  schedule:
    - cron: '30 10 * * 0'

jobs:
  ubuntu-20-04:
    name: 'Ubuntu 20.04'
    outputs:
      package-name: ${{ steps.install-to-directory.outputs.package-name }}
    runs-on: ubuntu-20.04
    env:
      SYSTEM_NAME: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.2.1'
          cache: 'true'
          modules: 'qtshadertools'

      - name: CMake
        run: cmake --version

      - name: Install dependencies
        run: >
          sudo apt-get install
          ninja-build
          libglu1-mesa-dev
          libxmu-dev
          libxi-dev
          libgl-dev
          imagemagick
          librsvg2-bin

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v11

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-release-vcpkg-static'
          buildPreset: 'static-release'

      - name: Install to directory
        id: install-to-directory
        shell: bash
        run: >
          cd "${{ github.workspace }}/builds/ninja-release-vcpkg-static";
          PACKAGE_NAME=nautograf_$(cat version.txt)_$SYSTEM_NAME;
          echo "package-name=$PACKAGE_NAME" >> $GITHUB_OUTPUT;
          cmake --install . --prefix "$(pwd)/install/$PACKAGE_NAME";
          rm -r "$(pwd)/install/$PACKAGE_NAME/lib" "$(pwd)/install/$PACKAGE_NAME/include"

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.install-to-directory.outputs.package-name }}
          path: ${{ github.workspace }}/builds/ninja-release-vcpkg-static/install

